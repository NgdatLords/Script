getgenv().setting = {
    Fov = 50,
    Color = Color3.fromRGB(191, 255, 209),
    LockPlayers = false,
    LockPlayersBind = Enum.KeyCode.L,
    resetPlayersBind = Enum.KeyCode.P,
}
_G.TeamCheck = false -- Use True or False to toggle TeamCheck
--Main
;Playersaimbot = nil
local mouse = game.Players.LocalPlayer:GetMouse()
local guiservice = game.GetService(game, "GuiService")
local players = game.GetService(game, "Players")
local localPlayer = players.LocalPlayer
local currentCamera = game.GetService(game, "Workspace").CurrentCamera
local circle = Drawing.new("Circle")

if game:GetService("CoreGui"):FindFirstChild('infoplayers') then 
    game:GetService("CoreGui"):FindFirstChild('infoplayers'):Destroy()
end

local infoplayers = Instance.new("ScreenGui")
local Main = Instance.new("Frame")
local MainCorner = Instance.new("UICorner")
local Profile = Instance.new("Frame")
local ProfileCorner = Instance.new("UICorner")
local ImageProfile = Instance.new("ImageLabel")
local ImageProfileCorner = Instance.new("UICorner")
local HealthPlayers = Instance.new("TextLabel")
local NamePlayers = Instance.new("TextLabel")
local loackplayerslabel = Instance.new("TextButton")
local Healthbar = Instance.new("Frame")
local HealthbarCorner = Instance.new("UICorner")
local Healthgreen = Instance.new("Frame")
local HealthgreenCorner = Instance.new("UICorner")

infoplayers.Name = "infoplayers"
infoplayers.Parent = game:GetService("CoreGui")
infoplayers.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

Main.Name = "Main"
Main.Parent = infoplayers
Main.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
Main.Position = UDim2.new(0.01, 0, 0.3, 0)
Main.Size = UDim2.new(0, 263, 0, 120)

MainCorner.Name = "MainCorner"
MainCorner.Parent = Main

Profile.Name = "Profile"
Profile.Parent = Main
Profile.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Profile.Position = UDim2.new(0.0570342205, 0, 0.149425298, 0)
Profile.Size = UDim2.new(0, 60, 0, 60)

ProfileCorner.CornerRadius = UDim.new(0, 100)
ProfileCorner.Name = "ProfileCorner"
ProfileCorner.Parent = Profile

ImageProfile.Name = "ImageProfile"
ImageProfile.Parent = Profile
ImageProfile.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
ImageProfile.BackgroundTransparency = 0
ImageProfile.Position = UDim2.new(0, 1, 0, 1)
ImageProfile.Size = UDim2.new(0, 58, 0, 58)
ImageProfile.Image = ''

ImageProfileCorner.CornerRadius = UDim.new(0, 100)
ImageProfileCorner.Name = "ImageProfileCorner"
ImageProfileCorner.Parent = ImageProfile

HealthPlayers.Name = "HealthPlayers"
HealthPlayers.Parent = Profile
HealthPlayers.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
HealthPlayers.BackgroundTransparency = 1.000
HealthPlayers.Position = UDim2.new(1.24220526, 0, 0.377586216, 0)
HealthPlayers.Size = UDim2.new(0, 173, 0, 22)
HealthPlayers.Font = Enum.Font.FredokaOne
HealthPlayers.Text = "Máu | N/A"
HealthPlayers.TextColor3 = Color3.fromRGB(255, 255, 255)
HealthPlayers.TextSize = 19.000
HealthPlayers.TextXAlignment = Enum.TextXAlignment.Left
HealthPlayers.TextYAlignment = Enum.TextYAlignment.Bottom


loackplayerslabel.Name = "loackplayerslabel"
loackplayerslabel.Parent = Profile
loackplayerslabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
loackplayerslabel.BackgroundTransparency = 1.000
loackplayerslabel.Position = UDim2.new(0.1, 0, 1.1, 0)
loackplayerslabel.Size = UDim2.new(0, 173, 0, 22)
loackplayerslabel.Font = Enum.Font.FredokaOne
loackplayerslabel.Text = "Khoá Người | TẮT"
loackplayerslabel.TextColor3 = Color3.fromRGB(255, 255, 255)
loackplayerslabel.TextSize = 19.000
loackplayerslabel.TextXAlignment = Enum.TextXAlignment.Left
loackplayerslabel.TextYAlignment = Enum.TextYAlignment.Bottom


NamePlayers.Name = "NamePlayers"
NamePlayers.Parent = Profile
NamePlayers.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
NamePlayers.BackgroundTransparency = 1.000
NamePlayers.Position = UDim2.new(1.24220526, 0, 0.0109195411, 0)
NamePlayers.Size = UDim2.new(0, 173, 0, 22)
NamePlayers.Font = Enum.Font.FredokaOne
NamePlayers.Text = "Tên | N/A"
NamePlayers.TextColor3 = Color3.fromRGB(255, 255, 255)
NamePlayers.TextSize = 19.000
NamePlayers.TextXAlignment = Enum.TextXAlignment.Left
NamePlayers.TextYAlignment = Enum.TextYAlignment.Bottom

Healthbar.Name = "Healthbar"
Healthbar.Parent = Profile
Healthbar.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Healthbar.Position = UDim2.new(1.23333335, 0, 0.850000024, 0)
Healthbar.Size = UDim2.new(0, 155, 0, 8)

HealthbarCorner.Name = "HealthbarCorner"
HealthbarCorner.Parent = Healthbar

Healthgreen.Name = "Healthgreen"
Healthgreen.Parent = Healthbar
Healthgreen.BackgroundColor3 = Color3.fromRGB(227, 79, 79)
Healthgreen.Size = UDim2.new(0, 155, 0, 8)

HealthgreenCorner.Name = "HealthgreenCorner"
HealthgreenCorner.Parent = Healthgreen

function updateCircle(Fov,colorCircle)
   if circle.__OBJECT_EXISTS then
       circle.Transparency = 1
       circle.Visible = true
       circle.Thickness = 2
       circle.Color = colorCircle
       circle.NumSides = 100
       circle.Radius = (Fov * 6) / 2
       circle.Filled = false
       circle.Position = Vector2.new(mouse.X, mouse.Y + (guiservice.GetGuiInset(guiservice).Y))
   end
end
spawn(function()
    game.GetService(game, "RunService").RenderStepped:Connect(function()
        pcall(function()
        updateCircle(getgenv().setting['Fov'],getgenv().setting['Color'])
        end)
    end)
end)
spawn(function()
    pcall(function()
        while wait() do
            for i, v in pairs(players.GetPlayers(players)) do
                if game.Workspace.Characters:FindFirstChild(v.Name) or game.Workspace.Characters:FindFirstChild(v.DisplayName) then
                    if v.Character:FindFirstChild('HumanoidRootPart') then
                        local pos = currentCamera.WorldToViewportPoint(currentCamera, v.Character.HumanoidRootPart.Position)
                        local magnitude = (Vector2.new(pos.X, pos.Y) - Vector2.new(mouse.X, mouse.Y)).magnitude
                        if magnitude < (getgenv().setting['Fov'] * 6 -8) /2 then
                            if magnitude < math.huge then
                                if (v.Character.HumanoidRootPart.Position-game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position).magnitude <= 1000 then
                                    if v.Name ~= game.Players.LocalPlayer.Name then
                                        if getgenv().setting['LockPlayers'] == false then
                                            Playersaimbot = v.Name
                                            PlayersPosition = v.Character.HumanoidRootPart.Position
                                            v.Character.HumanoidRootPart.Size = Vector3.new(100,100,100)
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end)
end)
spawn(function()
    game.GetService(game, "RunService").RenderStepped:Connect(function()
        if Playersaimbot ~= nil then 
            for i,v in pairs(game.Players:GetChildren()) do
                if v.Name == Playersaimbot then 
                    if game.Workspace.Characters:FindFirstChild(v.Name) then
                        NamePlayers.Text = "Tên | "..v.Name
                        HealthPlayers.Text = "Máu | "..math.floor(v.Character.Humanoid.Health).."/"..v.Character.Humanoid.MaxHealth
                        local hp = v.Character.Humanoid.Health/v.Character.Humanoid.MaxHealth
                        pcall(function()
                        Healthgreen:TweenSize(UDim2.new(hp,0,0,8),Enum.EasingDirection.Out,Enum.EasingStyle.Quad,0.15)
                        end)
                        ImageProfile.Image = game:GetService("Players"):GetUserThumbnailAsync(v.UserId, Enum.ThumbnailType.HeadShot, Enum.ThumbnailSize.Size420x420)
                    end
                end
            end
        end
    end)
end)

loackplayerslabel.MouseButton1Down:Connect(function()
        if getgenv().setting['LockPlayers'] then
            loackplayerslabel.Text = "Khoá Người | TẮT"
            getgenv().setting['LockPlayers'] = false
getgenv().ABCD = false
            print(getgenv().setting['LockPlayers'])
        else
            loackplayerslabel.Text = "Khoá Người | MỞ"
getgenv().ABCD = true

            getgenv().setting['LockPlayers'] = true
            print(getgenv().setting['LockPlayers'])
        end
    

end)

spawn(function()
    while wait() do
        for i,v in pairs(game.Players:GetChildren()) do
            if v.Name == Playersaimbot then
                PlayersPosition = v.Character.HumanoidRootPart.Position
            end
        end
    end
end)
spawn(function()
    local gg = getrawmetatable(game)
    local old = gg.__namecall
    setreadonly(gg,false)
    gg.__namecall = newcclosure(function(...)
        local method = getnamecallmethod()
        local args = {...}
        if getgenv().ABCD and tostring(method) == "FireServer" then
            if tostring(args[1]) == "RemoteEvent" then
                if tostring(args[2]) ~= "true" and tostring(args[2]) ~= "false" then
                    if Playersaimbot ~= nil then
                        args[2] = PlayersPosition
                        return old(unpack(args))
                    end
                end
            end
        end
        return old(...)
    end)
end)
mouse.Button1Down:Connect(function()
    pcall(function()
        if Playersaimbot ~= nil then
            local args = {
              [1] = PlayersPosition,
              [2] = game:GetService("Players"):FindFirstChild(Playersaimbot).Character.HumanoidRootPart
            }
        game:GetService("Players").LocalPlayer.Character[game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Name].RemoteFunctionShoot:InvokeServer(unpack(args))
    end
    end)
end)
--ske esp
local function addskeletonesp(player)

    spawn(function()
        local supported = true
        local parttbl = {"Head", "LowerTorso", "RightUpperLeg", "LeftUpperLeg", "RightLowerLeg", "LeftLowerLeg", "RightFoot", "LeftFoot", "LeftUpperArm", "RightUpperArm", "RightLowerArm", "LeftLowerArm", "LeftHand", "RightHand"}
        for i,v in pairs(parttbl) do
            if player.Character:FindFirstChild(v) == nil then
                supported = false
            end
        end
        if supported then
            function createline(from, to)
                local Camera = Workspace.CurrentCamera
                local Line = Drawing.new("Line")
                Line.Visible = true
                Line.From = Vector2.new(from.X, from.Y)
                Line.To = Vector2.new(to.X, to.Y)
                Line.Color = Color3.fromRGB(0, 255, 0)
                Line.Thickness = 1.5
                Line.Transparency = 1
                return Line
            end
            
            function getpos(pos)
                return Vector2.new(pos.X, pos.Y)
            end
            
            local Camera = Workspace.CurrentCamera
            
            local TopTorso = Camera:WorldToViewportPoint(player.Character.Head.Position - Vector3.new(0,0.7,0))
            local BottomTorso = Camera:WorldToViewportPoint(player.Character.LowerTorso.Position - Vector3.new(0,0.2,0))
            
            local MainLine = createline(TopTorso, BottomTorso)
            
            local RightLeg = Camera:WorldToViewportPoint(player.Character.RightUpperLeg.Position + Vector3.new(0,0.2,0))
            local RightLegLine = createline(BottomTorso, RightLeg)
            
            local LeftLeg = Camera:WorldToViewportPoint(player.Character.LeftUpperLeg.Position + Vector3.new(0,0.2,0))
            local LeftLegLine = createline(BottomTorso, LeftLeg)
            
            local RightKnee = Camera:WorldToViewportPoint(player.Character.RightLowerLeg.Position + Vector3.new(0,0.2,0))
            local RightKneeLine = createline(RightLeg, RightKnee)
            
            local LeftKnee = Camera:WorldToViewportPoint(player.Character.LeftLowerLeg.Position + Vector3.new(0,0.2,0))
            local LeftKneeLine = createline(LeftLeg, LeftKnee)
            
            local RightFoot = Camera:WorldToViewportPoint(player.Character.RightFoot.Position)
            local RightFootLine = createline(RightKnee, RightFoot)
            
            local LeftFoot = Camera:WorldToViewportPoint(player.Character.LeftFoot.Position)
            local LeftFootLine = createline(LeftKnee, LeftFoot)
            
            local LeftArm = Camera:WorldToViewportPoint(player.Character.LeftUpperArm.Position + Vector3.new(0,0.2,0))
            local LeftLine = createline(TopTorso, LeftArm)
            
            local RightArm = Camera:WorldToViewportPoint(player.Character.RightUpperArm.Position + Vector3.new(0,0.2,0))
            local RightLine = createline(TopTorso, RightArm)
            
            local RightElbow = Camera:WorldToViewportPoint(player.Character.RightLowerArm.Position + Vector3.new(0,0.2,0))
            local RightElbowLine = createline(RightArm, RightElbow)
            
            local LeftElbow = Camera:WorldToViewportPoint(player.Character.LeftLowerArm.Position + Vector3.new(0,0.2,0))
            local LeftElbowLine = createline(LeftArm, LeftElbow)
            
            local LeftHand = Camera:WorldToViewportPoint(player.Character.LeftHand.Position)
            local LeftHandLine = createline(LeftElbow, LeftHand)
            
            local RightHand = Camera:WorldToViewportPoint(player.Character.RightHand.Position)
            local RightHandLine = createline(RightElbow, RightHand)
            
            game:GetService("RunService").RenderStepped:Connect(function()
                local Camera = Workspace.CurrentCamera
                if player.Character ~= nil and player.Character:FindFirstChild("Humanoid") ~= nil and player.Character:FindFirstChild("HumanoidRootPart") ~= nil and player.Character:FindFirstChild("Humanoid").Health > 0 then
                    local Vector, onScreen = Camera:worldToViewportPoint(player.Character.HumanoidRootPart.Position)
                    
                    local TopTorso = Camera:WorldToViewportPoint(player.Character.Head.Position - Vector3.new(0,0.7,0))
                    local BottomTorso = Camera:WorldToViewportPoint(player.Character.LowerTorso.Position - Vector3.new(0,0.2,0))
                    local RightLeg = Camera:WorldToViewportPoint(player.Character.RightUpperLeg.Position + Vector3.new(0,0.2,0))
                    local LeftLeg = Camera:WorldToViewportPoint(player.Character.LeftUpperLeg.Position + Vector3.new(0,0.2,0))
                    local RightKnee = Camera:WorldToViewportPoint(player.Character.RightLowerLeg.Position + Vector3.new(0,0.2,0))
                    local LeftKnee = Camera:WorldToViewportPoint(player.Character.LeftLowerLeg.Position + Vector3.new(0,0.2,0))
                    local RightFoot = Camera:WorldToViewportPoint(player.Character.RightFoot.Position)
                    local LeftFoot = Camera:WorldToViewportPoint(player.Character.LeftFoot.Position)
                    local LeftArm = Camera:WorldToViewportPoint(player.Character.LeftUpperArm.Position + Vector3.new(0,0.2,0))
                    local RightArm = Camera:WorldToViewportPoint(player.Character.RightUpperArm.Position + Vector3.new(0,0.2,0))
                    local RightElbow = Camera:WorldToViewportPoint(player.Character.RightLowerArm.Position + Vector3.new(0,0.2,0))
                    local LeftElbow = Camera:WorldToViewportPoint(player.Character.LeftLowerArm.Position + Vector3.new(0,0.2,0))
                    local LeftHand = Camera:WorldToViewportPoint(player.Character.LeftHand.Position)
                    local RightHand = Camera:WorldToViewportPoint(player.Character.RightHand.Position)
                    
                    RightFootLine.From = getpos(Camera:WorldToViewportPoint(player.Character.RightLowerLeg.Position + Vector3.new(0,0.2,0)))
                    LeftFootLine.From = getpos(Camera:WorldToViewportPoint(player.Character.LeftLowerLeg.Position + Vector3.new(0,0.2,0)))
                    LeftKneeLine.From = getpos(Camera:WorldToViewportPoint(player.Character.LeftUpperLeg.Position + Vector3.new(0,0.2,0)))
                    RightKneeLine.From = getpos(Camera:WorldToViewportPoint(player.Character.RightUpperLeg.Position + Vector3.new(0,0.2,0)))
                    RightLegLine.From = getpos(Camera:WorldToViewportPoint(player.Character.LowerTorso.Position - Vector3.new(0,0.2,0)))
                    LeftLegLine.From = getpos(Camera:WorldToViewportPoint(player.Character.LowerTorso.Position - Vector3.new(0,0.2,0)))
                    LeftHandLine.From = getpos(Camera:WorldToViewportPoint(player.Character.LeftLowerArm.Position + Vector3.new(0,0.2,0)))
                    RightHandLine.From = getpos(Camera:WorldToViewportPoint(player.Character.RightLowerArm.Position + Vector3.new(0,0.2,0)))
                    MainLine.From = getpos(Camera:WorldToViewportPoint(player.Character.Head.Position - Vector3.new(0,0.7,0)))
                    LeftLine.From = getpos(Camera:WorldToViewportPoint(player.Character.Head.Position - Vector3.new(0,0.7,0)))
                    RightLine.From = getpos(Camera:WorldToViewportPoint(player.Character.Head.Position - Vector3.new(0,0.7,0)))
                    RightElbowLine.From = getpos(Camera:WorldToViewportPoint(player.Character.RightUpperArm.Position + Vector3.new(0,0.2,0)))
                    LeftElbowLine.From = getpos(Camera:WorldToViewportPoint(player.Character.LeftUpperArm.Position + Vector3.new(0,0.2,0)))
                    
                    RightFootLine.To = getpos(Camera:WorldToViewportPoint(player.Character.RightFoot.Position))
                    LeftFootLine.To = getpos(Camera:WorldToViewportPoint(player.Character.LeftFoot.Position))
                    LeftKneeLine.To = getpos(Camera:WorldToViewportPoint(player.Character.LeftLowerLeg.Position + Vector3.new(0,0.2,0)))
                    RightKneeLine.To = getpos(Camera:WorldToViewportPoint(player.Character.RightLowerLeg.Position + Vector3.new(0,0.2,0)))
                    RightLegLine.To = getpos(Camera:WorldToViewportPoint(player.Character.RightUpperLeg.Position + Vector3.new(0,0.2,0)))
                    LeftLegLine.To = getpos(Camera:WorldToViewportPoint(player.Character.LeftUpperLeg.Position + Vector3.new(0,0.2,0)))
                    LeftHandLine.To = getpos(Camera:WorldToViewportPoint(player.Character.LeftHand.Position))
                    RightHandLine.To = getpos(Camera:WorldToViewportPoint(player.Character.RightHand.Position))
                    MainLine.To = getpos(Camera:WorldToViewportPoint(player.Character.LowerTorso.Position - Vector3.new(0,0.2,0)))
                    LeftLine.To = getpos(Camera:WorldToViewportPoint(player.Character.LeftUpperArm.Position + Vector3.new(0,0.2,0)))
                    RightLine.To = getpos(Camera:WorldToViewportPoint(player.Character.RightUpperArm.Position + Vector3.new(0,0.2,0)))
                    RightElbowLine.To = getpos(Camera:WorldToViewportPoint(player.Character.RightLowerArm.Position + Vector3.new(0,0.2,0)))
                    LeftElbowLine.To = getpos(Camera:WorldToViewportPoint(player.Character.LeftLowerArm.Position + Vector3.new(0,0.2,0)))
                    
                    if onScreen then
                        RightFootLine.Visible = true
                        LeftFootLine.Visible = true
                        LeftKneeLine.Visible = true
                        RightKneeLine.Visible = true
                        RightLegLine.Visible = true
                        LeftLegLine.Visible = true
                        LeftHandLine.Visible = true
                        RightHandLine.Visible = true
                        MainLine.Visible = true
                        LeftLine.Visible = true
                        RightLine.Visible = true
                        RightElbowLine.Visible = true
                        LeftElbowLine.Visible = true
                    else
                        RightFootLine.Visible = false
                        LeftFootLine.Visible = false
                        LeftKneeLine.Visible = false
                        RightKneeLine.Visible = false
                        RightLegLine.Visible = false
                        LeftLegLine.Visible = false
                        LeftHandLine.Visible = false
                        RightHandLine.Visible = false
                        MainLine.Visible = false
                        LeftLine.Visible = false
                        RightLine.Visible = false
                        RightElbowLine.Visible = false
                        LeftElbowLine.Visible = false
                    end
                else
                    RightFootLine:Remove()
                    LeftFootLine:Remove()
                    LeftKneeLine:Remove()
                    RightKneeLine:Remove()
                    RightLegLine:Remove()
                    LeftLegLine:Remove()
                    LeftHandLine:Remove()
                    RightHandLine:Remove()
                    MainLine:Remove()
                    LeftLine:Remove()
                    RightLine:Remove()
                    RightElbowLine:Remove()
                    LeftElbowLine:Remove()
                end
            end)
        end
    end)
end
for i,v in pairs(game.Players:GetChildren()) do
    addskeletonesp(v)
end
--name esp
local c = workspace.CurrentCamera
local ps = game:GetService("Players")
local lp = ps.LocalPlayer
local rs = game:GetService("RunService")

local function esp(p,cr)
    local h = cr:WaitForChild("Humanoid")
    local hrp = cr:WaitForChild("HumanoidRootPart")

    local text = Drawing.new("Text")
    text.Visible = false
    text.Center = true
    text.Outline = true 
    text.Font = 2
    text.Color = Color3.fromRGB(255,255,255)
    text.Size = 13

    local c1
    local c2
    local c3

    local function dc()
        text.Visible = false
        text:Remove()
        if c1 then
            c1:Disconnect()
            c1 = nil 
        end
        if c2 then
            c2:Disconnect()
            c2 = nil 
        end
        if c3 then
            c3:Disconnect()
            c3 = nil 
        end
    end

    c2 = cr.AncestryChanged:Connect(function(_,parent)
        if not parent then
            dc()
        end
    end)

    c3 = h.HealthChanged:Connect(function(v)
        if (v<=0) or (h:GetState() == Enum.HumanoidStateType.Dead) then
            dc()
        end
    end)

    c1 = rs.RenderStepped:Connect(function()
        local hrp_pos,hrp_onscreen = c:WorldToViewportPoint(hrp.Position)
        if hrp_onscreen then
            text.Position = Vector2.new(hrp_pos.X, hrp_pos.Y)
            text.Text = p.Name
            text.Visible = true
        else
            text.Visible = false
        end
    end)
end

local function p_added(p)
    if p.Character then
        esp(p,p.Character)
    end
    p.CharacterAdded:Connect(function(cr)
        esp(p,cr)
    end)
end

for i,p in next, ps:GetPlayers() do 
    if p ~= lp then
        p_added(p)
    end
end

ps.PlayerAdded:Connect(p_added)
--box esp
local settings = {
    defaultcolor = Color3.fromRGB(255,0,0),
    teamcheck = false,
    teamcolor = true
};
-- services
local runService = game:GetService("RunService");
local players = game:GetService("Players");

-- variables
local localPlayer = players.LocalPlayer;
local camera = workspace.CurrentCamera;

-- functions
local newVector2, newColor3, newDrawing = Vector2.new, Color3.new, Drawing.new;
local tan, rad = math.tan, math.rad;
local round = function(...) local a = {}; for i,v in next, table.pack(...) do a[i] = math.round(v); end return unpack(a); end;
local wtvp = function(...) local a, b = camera.WorldToViewportPoint(camera, ...) return newVector2(a.X, a.Y), b, a.Z end;

local espCache = {};
local function createEsp(player)
   local drawings = {};
   
   drawings.box = newDrawing("Square");
   drawings.box.Thickness = 1;
   drawings.box.Filled = false;
   drawings.box.Color = settings.defaultcolor;
   drawings.box.Visible = false;
   drawings.box.ZIndex = 2;

   drawings.boxoutline = newDrawing("Square");
   drawings.boxoutline.Thickness = 3;
   drawings.boxoutline.Filled = false;
   drawings.boxoutline.Color = newColor3();
   drawings.boxoutline.Visible = false;
   drawings.boxoutline.ZIndex = 1;

   espCache[player] = drawings;
end

local function removeEsp(player)
   if rawget(espCache, player) then
       for _, drawing in next, espCache[player] do
           drawing:Remove();
       end
       espCache[player] = nil;
   end
end

local function updateEsp(player, esp)
   local character = player and player.Character;
   if character then
       local cframe = character:GetModelCFrame();
       local position, visible, depth = wtvp(cframe.Position);
       esp.box.Visible = visible;
       esp.boxoutline.Visible = visible;

       if cframe and visible then
           local scaleFactor = 1 / (depth * tan(rad(camera.FieldOfView / 2)) * 2) * 1000;
           local width, height = round(4 * scaleFactor, 5 * scaleFactor);
           local x, y = round(position.X, position.Y);

           esp.box.Size = newVector2(width, height);
           esp.box.Position = newVector2(round(x - width / 2, y - height / 2));
           esp.box.Color = settings.teamcolor and player.TeamColor.Color or settings.defaultcolor;

           esp.boxoutline.Size = esp.box.Size;
           esp.boxoutline.Position = esp.box.Position;
       end
   else
       esp.box.Visible = false;
       esp.boxoutline.Visible = false;
   end
end

-- main
for _, player in next, players:GetPlayers() do
   if player ~= localPlayer then
       createEsp(player);
   end
end

players.PlayerAdded:Connect(function(player)
   createEsp(player);
end);

players.PlayerRemoving:Connect(function(player)
   removeEsp(player);
end)

runService:BindToRenderStep("esp", Enum.RenderPriority.Camera.Value, function()
   for player, drawings in next, espCache do
       if settings.teamcheck and player.Team == localPlayer.Team then
           continue;
       end

       if drawings and player ~= localPlayer then
           updateEsp(player, drawings);
       end
   end
end)
--Tracer Esp
local lplr = game.Players.LocalPlayer
local camera = game:GetService("Workspace").CurrentCamera
local CurrentCamera = workspace.CurrentCamera
local worldToViewportPoint = CurrentCamera.worldToViewportPoint

for i,v in pairs(game.Players:GetChildren()) do
    local Tracer = Drawing.new("Line")
    Tracer.Visible = false
    Tracer.Color = Color3.new(1,1,1)
    Tracer.Thickness = 1
    Tracer.Transparency = 1

    function lineesp()
        game:GetService("RunService").RenderStepped:Connect(function()
            if v.Character ~= nil and v.Character:FindFirstChild("Humanoid") ~= nil and v.Character:FindFirstChild("HumanoidRootPart") ~= nil and v ~= lplr and v.Character.Humanoid.Health > 0 then
                local Vector, OnScreen = camera:worldToViewportPoint(v.Character.HumanoidRootPart.Position)

                if OnScreen then
                    Tracer.From = Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y / 1)
                    Tracer.To = Vector2.new(Vector.X, Vector.Y)

                    if _G.TeamCheck and v.TeamColor == lplr.TeamColor then
                        --//Teammates
                        Tracer.Visible = false
                    else
                        --//Enemies
                        Tracer.Visible = true
                    end
                else
                    Tracer.Visible = false
                end
            else
                Tracer.Visible = false
            end
        end)
    end
    coroutine.wrap(lineesp)()
end

game.Players.PlayerAdded:Connect(function(v)
    local Tracer = Drawing.new("Line")
    Tracer.Visible = false
    Tracer.Color = Color3.new(1,1,1)
    Tracer.Thickness = 1
    Tracer.Transparency = 1

    function lineesp()
        game:GetService("RunService").RenderStepped:Connect(function()
            if v.Character ~= nil and v.Character:FindFirstChild("Humanoid") ~= nil and v.Character:FindFirstChild("HumanoidRootPart") ~= nil and v ~= lplr and v.Character.Humanoid.Health > 0 then
                local Vector, OnScreen = camera:worldToViewportPoint(v.Character.HumanoidRootPart.Position)

                if OnScreen then
                    Tracer.From = Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y / 1)
                    Tracer.To = Vector2.new(Vector.X, Vector.Y)

                    if _G.TeamCheck and v.TeamColor == lplr.TeamColor then
                        --//Teammates
                        Tracer.Visible = false
                    else
                        --//Enemies
                        Tracer.Visible = true
                    end
                else
                    Tracer.Visible = false
                end
            else
                Tracer.Visible = false
            end
        end)
    end
    coroutine.wrap(lineesp)()
end)
